{"version":3,"sources":["components/alert/Alert.js","components/modal/Modal.js","components/skeleton/Skeleton.js","views/reports/ProductWisCustomerReport.js","views/products/Product.js"],"names":["Alert","props","color","data","alertMsg","Modal","backdrop","visible","open","onClose","close","titleModal","descModal","onClick","itemID","React","memo","LoadingBars","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","ProductWisCustomerReport","loadingButton","setLoadingButton","useState","responseData","setResponseData","display","setDisplay","pagination","setPagination","startDate","setStartDate","searchData","setSearchData","endDate","setEndDate","serverAlert","setServerAlert","alertDetails","setAlertDetails","id","loadData","async","clearData","_data","fetch","process","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","status","json","i","Math","ceil","length","push","err","console","log","splice","useEffect","xs","sm","className","dateFormat","onChange","date","selected","selectsStart","maxDate","Date","calendarStartDay","selectsEnd","minDate","name","placeholder","e","target","value","icon","cilZoom","bordered","hover","scope","map","item","index","round","align","page","prevArray","undefined","handleShowData","Product","register","handleSubmit","reset","formState","errors","useForm","mode","loader","setLoader","categoryData","setCategoryData","productData","setProductData","setVisible","history","useHistory","params","useParams","_dataCategory","_dataProduct","dataCategory","categories","dataProduct","product","error","handleLoadCategory","onSubmit","_id","htmlFor","type","invalid","productName","required","pattern","message","style","categoryName","category_id","min","inStock","price","size","component","variant"],"mappings":"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","file":"static/js/28.6e489b22.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CAlert } from '@coreui/react'\n\nconst Alert = (props) => {\n  return (\n    <>\n      <CAlert color={props.data.color}>\n        <strong>{props.data.alertMsg}</strong>\n      </CAlert>\n    </>\n  )\n}\n\nexport default Alert\nAlert.propTypes = {\n  data: PropTypes.object,\n}\n","import React from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Modal = (props) => {\n  return (\n    <>\n      <CModal backdrop=\"static\" visible={props.open} onClose={() => props.close()}>\n        <CModalHeader>\n          <CModalTitle>{props.titleModal}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.descModal}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => props.close()}>\n            Close\n          </CButton>\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              props.data(props.itemID)\n              props.close()\n            }}\n          >\n            Ok\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\nexport default React.memo(Modal)\nModal.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  onClick: PropTypes.func,\n  itemID: PropTypes.string,\n  data: PropTypes.func,\n  titleModal: PropTypes.string,\n  descModal: PropTypes.string,\n}\n","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport ContentLoader from 'react-content-loader'\n// const LoadingBars = () => {\n//   return (\n//     <>\n//       <div>\n//         <SkeletonTheme baseColor=\"#F1EFF1\" highlightColor=\"#858789\">\n//           <h1>\n//             <Skeleton />\n//           </h1>\n//           <br></br>\n//           <Skeleton count={20} />\n//         </SkeletonTheme>\n//       </div>\n//     </>\n//   )\n// }\nconst LoadingBars = (props) => (\n  <ContentLoader\n    width={'100%'}\n    height={550}\n    viewBox=\"0 0 1000 550\"\n    backgroundColor=\"#eaeced\"\n    foregroundColor=\"#ffffff\"\n    {...props}\n  >\n    <rect x=\"51\" y=\"45\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <circle cx=\"879\" cy=\"123\" r=\"11\" />\n    <circle cx=\"914\" cy=\"123\" r=\"11\" />\n    <rect x=\"104\" y=\"115\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"305\" y=\"114\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"661\" y=\"114\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"155\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"880\" cy=\"184\" r=\"11\" />\n    <circle cx=\"915\" cy=\"184\" r=\"11\" />\n    <rect x=\"105\" y=\"176\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"306\" y=\"175\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"662\" y=\"175\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"56\" y=\"216\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"242\" r=\"11\" />\n    <circle cx=\"916\" cy=\"242\" r=\"11\" />\n    <rect x=\"106\" y=\"234\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"233\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"233\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"274\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"303\" r=\"11\" />\n    <circle cx=\"917\" cy=\"303\" r=\"11\" />\n    <rect x=\"107\" y=\"295\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"294\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"294\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"58\" y=\"335\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"363\" r=\"11\" />\n    <circle cx=\"916\" cy=\"363\" r=\"11\" />\n    <rect x=\"106\" y=\"355\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"354\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"354\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"395\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"424\" r=\"11\" />\n    <circle cx=\"917\" cy=\"424\" r=\"11\" />\n    <rect x=\"107\" y=\"416\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"415\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"415\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"453\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"51\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <rect x=\"955\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <circle cx=\"882\" cy=\"484\" r=\"11\" />\n    <circle cx=\"917\" cy=\"484\" r=\"11\" />\n    <rect x=\"107\" y=\"476\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"475\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"475\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"513\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"52\" y=\"80\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <rect x=\"53\" y=\"57\" rx=\"3\" ry=\"3\" width=\"68\" height=\"33\" />\n    <rect x=\"222\" y=\"54\" rx=\"3\" ry=\"3\" width=\"149\" height=\"33\" />\n    <rect x=\"544\" y=\"55\" rx=\"3\" ry=\"3\" width=\"137\" height=\"33\" />\n    <rect x=\"782\" y=\"56\" rx=\"3\" ry=\"3\" width=\"72\" height=\"33\" />\n    <rect x=\"933\" y=\"54\" rx=\"3\" ry=\"3\" width=\"24\" height=\"33\" />\n  </ContentLoader>\n)\n\nexport default LoadingBars\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport DatePicker from 'react-datepicker'\nimport Alert from 'src/components/alert/Alert'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { cilZoom } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nconst ProductWisCustomerReport = (props) => {\n  const [loadingButton, setLoadingButton] = useState(false)\n  const [responseData, setResponseData] = useState({})\n  var [display, setDisplay] = useState([])\n  const [pagination, setPagination] = useState([])\n  const [startDate, setStartDate] = useState()\n  const [searchData, setSearchData] = useState()\n  const [endDate, setEndDate] = useState()\n  var [serverAlert, setServerAlert] = useState(false)\n  const [alertDetails, setAlertDetails] = useState({\n    alertMsg: 'No order found',\n    color: 'warning',\n  })\n\n  const id = props.data\n  const loadData = async () => {\n    clearData()\n    try {\n      const _data = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/api/reports/product/sold/` + id,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n          },\n          body: JSON.stringify({ startDate, endDate, searchData }),\n        },\n      )\n      setLoadingButton(true)\n      if (_data.status === 200) {\n        const data = await _data.json()\n        setServerAlert(false)\n        for (let i = 1; i <= Math.ceil(data.length / 10); i++) {\n          pagination.push(i)\n        }\n\n        for (let i = 0; i < 10 && i < data.length; i++) {\n          if (data[i][2] > 0) display.push(data[i])\n        }\n        setResponseData(data)\n        setLoadingButton(false)\n      }\n      if (_data.status === 404) {\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'No data found', color: 'warning' })\n        setLoadingButton(false)\n      }\n      if (display.length === 0) {\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'No one ordered this product', color: 'warning' })\n        setLoadingButton(false)\n      }\n      if (_data.status === 401) {\n        setServerAlert(true)\n        setLoadingButton(false)\n        setAlertDetails({ alertMsg: 'Unauthorized access', color: 'warning' })\n      }\n    } catch (err) {\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server Error', color: 'warning' })\n      console.log(err, 'error')\n    }\n  }\n  //clear all prev data\n  const clearData = () => {\n    display.splice(0, display.length)\n    pagination.splice(0, pagination.length)\n  }\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (responseData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, responseData[i]])\n    }\n  }\n  useEffect(() => {\n    loadData()\n  }, [])\n  return (\n    <div>\n      <CRow>\n        <CCol xs={12} sm={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Customer Loyalty for this Product</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm className=\"row g-4\">\n                <div className=\"col-auto\">From </div>\n                <div className=\"col-auto\">\n                  <DatePicker\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={(date) => setStartDate(date)}\n                    selected={startDate}\n                    selectsStart\n                    startDate={startDate}\n                    endDate={endDate}\n                    maxDate={new Date()}\n                    calendarStartDay={1}\n                  />\n                </div>\n                <div className=\"col-auto\">To </div>\n                <div className=\"col-auto\">\n                  <DatePicker\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={(date) => setEndDate(date)}\n                    selected={endDate}\n                    selectsEnd\n                    startDate={startDate}\n                    endDate={endDate}\n                    minDate={startDate}\n                    maxDate={new Date()}\n                    calendarStartDay={1}\n                  />\n                </div>\n                <br />\n                <div className=\"col-auto\">\n                  <CFormInput\n                    id=\"search\"\n                    name=\"search\"\n                    placeholder=\"Search by Name\"\n                    onChange={(e) => {\n                      setSearchData(e.target.value)\n                    }}\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <CButton color=\"primary\" onClick={() => loadData()}>\n                    <CIcon icon={cilZoom} className=\"me-2\" />\n                    Search\n                  </CButton>\n                </div>\n              </CForm>\n\n              <br />\n              {display.length > 0 ? (\n                <>\n                  <CRow>\n                    <CCol xs={12} sm={12}>\n                      <CCard className=\"mb-4\">\n                        <CCardBody>\n                          <CCol xs={12}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n                          <CTable bordered hover>\n                            <CTableHead color=\"dark\">\n                              <CTableRow>\n                                <CTableHeaderCell scope=\"col\">Customer</CTableHeaderCell>\n                                <CTableHeaderCell scope=\"col\">Order Count</CTableHeaderCell>\n                                <CTableHeaderCell scope=\"col\">Product Count</CTableHeaderCell>\n                                <CTableHeaderCell scope=\"col\">Avg</CTableHeaderCell>\n                              </CTableRow>\n                            </CTableHead>\n                            <CTableBody>\n                              {display.map((item, index) => {\n                                return (\n                                  <CTableRow key={index}>\n                                    <CTableDataCell>{item[0]}</CTableDataCell>\n                                    <CTableDataCell>{item[2]}</CTableDataCell>\n                                    <CTableDataCell>{item[1]}</CTableDataCell>\n                                    <CTableDataCell>\n                                      {item[2] / item[1] ? Math.round(item[1] / item[2]) : 0}\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                )\n                              })}\n                            </CTableBody>\n                          </CTable>\n                          <CPagination align=\"center\">\n                            {pagination.map((item, index) => {\n                              return (\n                                <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                                  {item}\n                                </CPaginationItem>\n                              )\n                            })}\n                          </CPagination>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                  </CRow>\n                </>\n              ) : (\n                <CCol xs={12}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n              )}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default ProductWisCustomerReport\nProductWisCustomerReport.propTypes = {\n  data: PropTypes.string,\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { useParams } from 'react-router-dom'\nimport Modal from 'src/components/modal/Modal'\nimport ProductWisCustomerReport from '../reports/ProductWisCustomerReport'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\n\nconst Product = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ mode: 'onTouched' })\n  const [loader, setLoader] = useState(true)\n  const [loadingButton, setLoadingButton] = useState(false)\n  var [serverAlert, setServerAlert] = useState(false)\n  const [alertDetails, setAlertDetails] = useState({ alertMsg: '', color: 'success' })\n  const [categoryData, setCategoryData] = useState()\n  const [productData, setProductData] = useState()\n  const [visible, setVisible] = useState(false)\n  const history = useHistory()\n  const params = useParams()\n\n  const handleLoadCategory = async () => {\n    const id = params.id\n    setLoader(true)\n    try {\n      const _dataCategory = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/category/list`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n      const _dataProduct = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/product/` + id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n      if (_dataCategory.status === 200) {\n        const dataCategory = await _dataCategory.json()\n        setCategoryData(dataCategory.categories)\n        const dataProduct = await _dataProduct.json()\n        setProductData(dataProduct.product)\n      }\n      setLoader(false)\n    } catch (error) {\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Sorry !! We are encountering an issue!', color: 'warning' })\n      console.error('Error:', error)\n    }\n  }\n\n  const onSubmit = async (data) => {\n    const id = params.id\n    delete data._id\n    console.log(data)\n    setServerAlert(false)\n\n    try {\n      setLoadingButton(true)\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/product/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify(data),\n      })\n\n      if (_data.status === 200) {\n        setVisible(true)\n        setLoadingButton(false)\n      }\n      if (_data.status === 409) {\n        setLoadingButton(false)\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'Already Exist', color: 'warning' })\n      }\n      setLoadingButton(false)\n    } catch (error) {\n      console.error('Error:', error)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server Error', color: 'warning' })\n    }\n  }\n\n  //modal close and navigate\n  const toWhere = () => {\n    history.push('/products')\n  }\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  useEffect(() => {\n    handleLoadCategory()\n  }, [])\n  useEffect(() => {\n    // reset form with productData data\n    reset(productData)\n    //reference = https://jasonwatmore.com/post/2021/09/19/react-hook-form-set-form-values-in-useeffect-hook-after-async-data-load\n  }, [productData])\n  if (loader) {\n    return <LoadingBars />\n  }\n\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n      <Modal\n        open={visible}\n        close={setVisible}\n        data={toWhere}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Updated Successfully'}\n        descModal={'Product has been updated'}\n        visible={visible}\n      />\n      <CRow>\n        <CCol xs={12} sm={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Edit Product</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlInput1\">Product Name</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"productName\"\n                    name=\"productName\"\n                    placeholder=\"Egg Burger Bun\"\n                    invalid={errors.productName ? true : false}\n                    {...register('productName', {\n                      required: 'Required',\n                      pattern: {\n                        value: /^[a-zA-Z0-9 ]+$/,\n                        message: 'Enter valid name',\n                      },\n                    })}\n                  />\n                  {errors.productName && (\n                    <span style={{ color: 'red' }}>{errors.productName.message}</span>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlInput1\">Category Name</CFormLabel>\n                  <CFormSelect\n                    name=\"categoryName\"\n                    invalid={errors.categoryName ? true : false}\n                    {...register('category_id._id')}\n                    aria-label=\"Default select example\"\n                  >\n                    {categoryData.map((item, index) => {\n                      return (\n                        <option key={index} value={item._id}>\n                          {item.categoryName}\n                        </option>\n                      )\n                    })}\n                  </CFormSelect>\n                  {errors.category_id && (\n                    <span style={{ color: 'red' }}>{errors.category_id.message}</span>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlInput1\">Stocks</CFormLabel>\n                  <CFormInput\n                    type=\"number\"\n                    id=\"inStock\"\n                    name=\"inStock\"\n                    placeholder=\"100\"\n                    min={0}\n                    invalid={errors.inStock ? true : false}\n                    {...register('inStock', {\n                      required: 'Required',\n                      pattern: {\n                        value: /^(0|[1-9]\\d*)$/, //positive int = /^(0|[1-9]\\d*)$/  negative & positive decimal= /^-?(0|[1-9]\\d*)(\\.\\d+)?$/\n                        message: 'Must be a valid positive number',\n                      },\n                    })}\n                  />\n                  {errors.inStock && <span style={{ color: 'red' }}>{errors.inStock.message}</span>}\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlInput1\">Price</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"price\"\n                    name=\"price\"\n                    placeholder=\"Burger Bun\"\n                    invalid={errors.price ? true : false}\n                    {...register('price', {\n                      required: 'Required',\n                      min: {\n                        value: 1,\n                        message: 'Enter price',\n                      },\n                      pattern: {\n                        value: /^(0|[1-9]\\d*)(\\.\\d+)?$/, //positive int = /^(0|[1-9]\\d*)$/  negative & positive decimal= /^-?(0|[1-9]\\d*)(\\.\\d+)?$/\n                        message: 'Must be a valid number',\n                      },\n                    })}\n                  />\n                  {errors.price && <span style={{ color: 'red' }}>{errors.price.message}</span>}\n                </div>\n                <CButton color=\"primary\" size=\"sm\" className=\"px-4\" type={'submit'}>\n                  {loadingButton ? (\n                    <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                  ) : undefined}\n                  {loadingButton ? 'Loading' : 'Save'}\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <ProductWisCustomerReport data={params.id} />\n    </>\n  )\n}\n\nexport default Product\n"],"sourceRoot":""}