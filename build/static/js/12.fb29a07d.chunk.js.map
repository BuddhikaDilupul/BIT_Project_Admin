{"version":3,"sources":["components/alert/Alert.js","components/modal/Modal.js","components/skeleton/Skeleton.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","../node_modules/@coreui/icons/js/free/cil-trash.js","../node_modules/@coreui/icons/js/free/cil-zoom.js","components/charts/Charts.js","views/customer/Orders.js","views/customer/Customer.js"],"names":["Alert","props","color","data","alertMsg","Modal","backdrop","visible","open","onClose","close","titleModal","descModal","onClick","itemID","React","memo","LoadingBars","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","SVG","animate","animateBegin","backgroundOpacity","baseUrl","children","foregroundOpacity","gradientRatio","gradientDirection","uniqueKey","interval","rtl","speed","style","title","beforeMask","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","id","React.isValidElement","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","cilTrash","cilZoom","Charts","label","setLabel","useState","count","setCount","j","length","push","clr","pop","i","floor","getRandomColor","className","tittle","labels","datasets","Orders","history","useHistory","ordersData","setOrdersData","useDispatch","useSelector","state","ordersInfo","products","setProducts","category","setCategory","display","setDisplay","pagination","setPagination","loader","setLoader","setAlertMessage","serverAlert","setServerAlert","loadingButton","setLoadingButton","setVisible","searchData","setSearchData","setState","startDate","Date","endDate","addDays","key","setEndDate","reset","setReset","deleteItem","setDeleteItem","useEffect","async","_data","fetch","process","method","headers","Authorization","localStorage","getItem","status","json","ceil","orderList","err","console","error","handleLoadOrders","xs","sm","msg","window","location","reload","bordered","hover","scope","map","item","index","orderNumber","receiverName","dateOrder","slice","phoneNumber","shippingAddress","totalPrice","size","_id","icon","align","page","prevArray","handleShowData","Customer","alertDetails","setAlertDetails","customerData","setCustomerData","params","useParams","register","handleSubmit","watch","formState","errors","useForm","mode","customer","handleLoadCustomerData","htmlFor","type","name","defaultValue","firstName","readOnly","invalid","lastName","email","address","onSubmit","body","JSON","stringify","placeholder","promotion","required","message","cilSend"],"mappings":"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","file":"static/js/12.fb29a07d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CAlert } from '@coreui/react'\n\nconst Alert = (props) => {\n  return (\n    <>\n      <CAlert color={props.data.color}>\n        <strong>{props.data.alertMsg}</strong>\n      </CAlert>\n    </>\n  )\n}\n\nexport default Alert\nAlert.propTypes = {\n  data: PropTypes.object,\n}\n","import React from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Modal = (props) => {\n  return (\n    <>\n      <CModal backdrop=\"static\" visible={props.open} onClose={() => props.close()}>\n        <CModalHeader>\n          <CModalTitle>{props.titleModal}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.descModal}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => props.close()}>\n            Close\n          </CButton>\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              props.data(props.itemID)\n              props.close()\n            }}\n          >\n            Ok\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\nexport default React.memo(Modal)\nModal.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  onClick: PropTypes.func,\n  itemID: PropTypes.string,\n  data: PropTypes.func,\n  titleModal: PropTypes.string,\n  descModal: PropTypes.string,\n}\n","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport ContentLoader from 'react-content-loader'\n// const LoadingBars = () => {\n//   return (\n//     <>\n//       <div>\n//         <SkeletonTheme baseColor=\"#F1EFF1\" highlightColor=\"#858789\">\n//           <h1>\n//             <Skeleton />\n//           </h1>\n//           <br></br>\n//           <Skeleton count={20} />\n//         </SkeletonTheme>\n//       </div>\n//     </>\n//   )\n// }\nconst LoadingBars = (props) => (\n  <ContentLoader\n    width={'100%'}\n    height={550}\n    viewBox=\"0 0 1000 550\"\n    backgroundColor=\"#eaeced\"\n    foregroundColor=\"#ffffff\"\n    {...props}\n  >\n    <rect x=\"51\" y=\"45\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <circle cx=\"879\" cy=\"123\" r=\"11\" />\n    <circle cx=\"914\" cy=\"123\" r=\"11\" />\n    <rect x=\"104\" y=\"115\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"305\" y=\"114\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"661\" y=\"114\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"155\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"880\" cy=\"184\" r=\"11\" />\n    <circle cx=\"915\" cy=\"184\" r=\"11\" />\n    <rect x=\"105\" y=\"176\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"306\" y=\"175\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"662\" y=\"175\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"56\" y=\"216\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"242\" r=\"11\" />\n    <circle cx=\"916\" cy=\"242\" r=\"11\" />\n    <rect x=\"106\" y=\"234\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"233\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"233\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"274\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"303\" r=\"11\" />\n    <circle cx=\"917\" cy=\"303\" r=\"11\" />\n    <rect x=\"107\" y=\"295\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"294\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"294\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"58\" y=\"335\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"363\" r=\"11\" />\n    <circle cx=\"916\" cy=\"363\" r=\"11\" />\n    <rect x=\"106\" y=\"355\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"354\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"354\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"395\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"424\" r=\"11\" />\n    <circle cx=\"917\" cy=\"424\" r=\"11\" />\n    <rect x=\"107\" y=\"416\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"415\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"415\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"453\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"51\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <rect x=\"955\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <circle cx=\"882\" cy=\"484\" r=\"11\" />\n    <circle cx=\"917\" cy=\"484\" r=\"11\" />\n    <rect x=\"107\" y=\"476\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"475\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"475\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"513\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"52\" y=\"80\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <rect x=\"53\" y=\"57\" rx=\"3\" ry=\"3\" width=\"68\" height=\"33\" />\n    <rect x=\"222\" y=\"54\" rx=\"3\" ry=\"3\" width=\"149\" height=\"33\" />\n    <rect x=\"544\" y=\"55\" rx=\"3\" ry=\"3\" width=\"137\" height=\"33\" />\n    <rect x=\"782\" y=\"56\" rx=\"3\" ry=\"3\" width=\"72\" height=\"33\" />\n    <rect x=\"933\" y=\"54\" rx=\"3\" ry=\"3\" width=\"24\" height=\"33\" />\n  </ContentLoader>\n)\n\nexport default LoadingBars\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  animateBegin,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  gradientDirection,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  beforeMask,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  gradientDirection: 'left-right',\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n  beforeMask: null,\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","export const cilTrash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"]","export const cilZoom = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"]","import { CCard, CCardBody, CCardHeader } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { CChartPie } from '@coreui/react-chartjs'\nimport React, { useState } from 'react'\n\nconst Charts = (props) => {\n  const [label, setLabel] = useState([])\n  const [count, setCount] = useState([])\n  function getRandomColor(data) {\n    var letters = '0123456789ABCDEF'\n    let clr = []\n    clr.pop()\n    for (var j = 0; j < data; j++) {\n      var color = '#'\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)]\n      }\n      clr.push(color)\n    }\n    return clr\n  }\n  for (var j = 0; j < props.data.length; j++) {\n    count.push(props.data[j][1])\n    label.push(props.data[j][0])\n  }\n  let clr = getRandomColor(props.data.length)\n  return (\n    <div>\n      <CCard className=\"mb-4\">\n        <CCardHeader>{props.tittle}</CCardHeader>\n        <CCardBody>\n          <CChartPie\n            data={{\n              labels: label,\n              datasets: [\n                {\n                  data: count,\n                  backgroundColor: clr,\n                  //hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                },\n              ],\n            }}\n          />{' '}\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default Charts\nCharts.propTypes = {\n  data: PropTypes.array,\n  tittle: PropTypes.string,\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport 'react-date-range/dist/styles.css' // main css file\nimport 'react-date-range/dist/theme/default.css' // theme css file\nimport { addDays } from 'date-fns'\nimport { DateRangePicker } from 'react-date-range'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CHeader,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsF,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTruck, cilCheck, cilFastfood, cilTrash, cilThumbUp, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\nimport Charts from 'src/components/charts/Charts'\n\nconst Orders = (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const order = useSelector((state) => state.ordersInfo)\n  const [ordersData, setOrdersData] = useState({})\n  const [products, setProducts] = useState([])\n  const [category, setCategory] = useState([])\n  var [display, setDisplay] = useState([])\n  const [pagination, setPagination] = useState([])\n  const [loader, setLoader] = useState(true)\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [loadingButton, setLoadingButton] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [searchData, setSearchData] = useState([])\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: addDays(new Date(), 0),\n      key: 'selection',\n    },\n  ])\n  const [endDate, setEndDate] = useState()\n  const [reset, setReset] = useState(false)\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n  const id = props.id\n  const handleLoadOrders = async () => {\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/reports/` + id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status !== 200) {\n        setServerAlert(true)\n        setAlertMessage('Oops! Something Went Wrong!')\n      }\n\n      const data = await _data.json()\n      for (let i = 1; i <= Math.ceil(data.orderList.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < data.orderList.length; i++) {\n        display.push(data.orderList[i])\n      }\n\n      setOrdersData(data.orderList)\n      setProducts(data.products)\n      setCategory(data.category)\n      //dispatch({ type: 'orders', ordersInfo: data.orderList })\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n  const clearData = async () => {\n    display.splice(0, display.length)\n    pagination.splice(0, pagination.length)\n  }\n  const search = async () => {\n    clearData()\n    try {\n      let _data\n\n      _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/search/order`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify({ state, searchData }),\n      })\n\n      if (_data.status !== 200) {\n        setServerAlert(true)\n        setAlertMessage('Oops! Something Went Wrong!')\n      }\n\n      const data = await _data.json()\n      for (let i = 1; i <= Math.ceil(data.orderList.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < data.orderList.length; i++) {\n        display.push(data.orderList[i])\n      }\n      setOrdersData(data.orderList)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (ordersData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, ordersData[i]])\n    }\n    setLoader(false)\n  }\n  const handleDeleteData = async (props) => {\n    try {\n      const id = props\n\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/delete/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status !== 200) {\n        setServerAlert(true)\n        setAlertMessage('Oops! Something Went Wrong!')\n      }\n      if (_data.status === 200) {\n        refreshPage()\n      }\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n  function refreshPage() {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [reset])\n  // useEffect(() => {}, [search])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      {ordersData.length > 0 ? (\n        <>\n          <CCol xs={12} sm={12}>\n            {serverAlert ? <Alert msg={alertMsg} /> : null}\n          </CCol>\n          <Modal\n            open={visible}\n            close={setVisible}\n            data={handleDeleteData}\n            itemID={deleteItem}\n            onClick={() => {\n              handleClose()\n            }}\n            titleModal={'Delete Order?'}\n            descModal={'It will be gone forever'}\n            visible={visible}\n          />\n          {/* <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Search Orders</CCardHeader>\n            <CCardBody>\n              <CForm className=\"row g-4\">\n                <div className=\"col-auto\">\n                  <DateRangePicker\n                    onChange={(item) => setState([item.selection])}\n                    showSelectionPreview={false}\n                    moveRangeOnFirstSelection={false}\n                    months={1}\n                    ranges={state}\n                    direction=\"horizontal\"\n                    maxDate={new Date()}\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <CFormInput\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    placeholder=\"First Name\"\n                    defaultValue={searchData}\n                    onChange={(e) => {\n                      setSearchData(e.target.value)\n                    }}\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <CButton\n                    color=\"primary\"\n                    size=\"sm\"\n                    className=\"px-4\"\n                    onClick={() => {\n                      search()\n                    }}\n                  >\n                    {loadingButton ? (\n                      <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                    ) : undefined}\n                    {loadingButton ? 'Loading' : 'Search'}\n                  </CButton>\n                  <CButton\n                    color=\"warning\"\n                    size=\"sm\"\n                    className=\"px-4\"\n                    onClick={() => {\n                      refreshPage()\n                    }}\n                  >\n                    Reset\n                  </CButton>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> */}\n          <CRow>\n            <CCol xs={12} sm={12}>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <strong>Orders History</strong>\n                </CCardHeader>\n                {ordersData.length > 0 ? (\n                  <CCardBody>\n                    <p className=\"text-medium-emphasis small\">\n                      Here the all Orders of this customer.\n                    </p>\n                    <CTable bordered hover>\n                      <CTableHead color=\"dark\">\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">Order ID</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Shipping Address</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n\n                      <CTableBody>\n                        {display.map((item, index) => {\n                          return (\n                            <CTableRow key={index}>\n                              <CTableDataCell>{item.orderNumber}</CTableDataCell>\n                              <CTableDataCell>{item.receiverName}</CTableDataCell>\n                              <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                              <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                              <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                              <CTableDataCell>LKR {item.totalPrice} </CTableDataCell>\n                              <CTableDataCell>\n                                {item.status == 'delivered' ? (\n                                  <CBadge color=\"success\">{item.status}</CBadge>\n                                ) : null}\n                                {item.status == 'processing' ? (\n                                  <CBadge color=\"info\">{item.status}</CBadge>\n                                ) : null}\n                                {item.status == 'cancelled' || item.status == 'suspended' ? (\n                                  <CBadge color=\"danger\">{item.status}</CBadge>\n                                ) : null}\n                                {item.status == 'shipped' ? (\n                                  <CBadge color=\"warning\">{item.status}</CBadge>\n                                ) : null}\n                                {item.status == 'pending' ? (\n                                  <CBadge color=\"primary\">{item.status}</CBadge>\n                                ) : null}\n                              </CTableDataCell>\n                              <CTableDataCell className=\"d-flex justify-content-evenly\">\n                                <span>\n                                  <CButton\n                                    color=\"danger\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      setVisible(true)\n                                      setDeleteItem(item._id)\n                                    }}\n                                  >\n                                    <CIcon icon={cilTrash} className=\"me-2\" />\n                                    Delete\n                                  </CButton>\n                                  <CButton\n                                    color=\"warning\"\n                                    size=\"sm\"\n                                    onClick={() => history.push(`/order/${item._id}`)}\n                                  >\n                                    <CIcon icon={cilZoom} className=\"me-2\" />\n                                    View\n                                  </CButton>\n                                </span>\n                              </CTableDataCell>\n                            </CTableRow>\n                          )\n                        })}\n                      </CTableBody>\n                    </CTable>\n                    {pagination ? (\n                      <CPagination align=\"center\">\n                        {pagination.map((item, index) => {\n                          return (\n                            <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                              {item}\n                            </CPaginationItem>\n                          )\n                        })}\n                      </CPagination>\n                    ) : null}\n                  </CCardBody>\n                ) : null}\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6} sm={6}>\n              <Charts data={products} tittle={'Most ordered Products'} />\n            </CCol>\n            <CCol xs={6} sm={6}>\n              <Charts data={category} tittle=\"Most ordered Categories\" />\n            </CCol>\n          </CRow>\n        </>\n      ) : (\n        <>\n          <CHeader>\n            <strong>No Order History Data Found</strong>\n          </CHeader>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Orders\nOrders.propTypes = {\n  id: PropTypes.string,\n}\n","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useParams } from 'react-router-dom'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormFloating,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CRow,\n} from '@coreui/react'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Orders from './Orders'\nimport Charts from 'src/components/charts/Charts'\nimport CIcon from '@coreui/icons-react'\nimport { cilSend } from '@coreui/icons'\n\nexport default function Customer() {\n  var [serverAlert, setServerAlert] = useState(false)\n  const [alertDetails, setAlertDetails] = useState({ alertMsg: '', color: 'success' })\n  const [loader, setLoader] = useState(true)\n  const [customerData, setCustomerData] = useState('')\n  const [visible, setVisible] = useState(false)\n  const params = useParams()\n  var [serverAlert, setServerAlert] = useState(false)\n  const id = params.id\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({ mode: 'onChange' })\n  // const onSubmit = async () => {\n  //   const id = params.id\n\n  //   let customer = {\n  //     userName: '',\n  //     firstName: '',\n  //     lastName: '',\n  //   }\n  //   try {\n  //     setLoadingButton(true)\n  //     const _data = await fetch('${process.env.REACT_APP_BACKEND_URL}/api/customer/' + id, {\n  //       method: 'PUT',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n  //       },\n  //       body: JSON.stringify(customer),\n  //     })\n\n  //     if (_data.status === 200) {\n  //       const data = await _data.json()\n  //       setLoadingButton(false)\n  //       setServerAlert(true)\n  //       setAlertDetails({ alertMsg: 'Updated Successfully', color: 'success' })\n  //       setResponseData(data)\n  //     }\n  //   } catch (error) {\n  //     console.error('Error:', error)\n  //     setLoadingButton(false)\n  //     setServerAlert(true)\n  //     setAlertDetails({ alertMsg: 'Internal server Error', color: 'warning' })\n  //   }\n  // }\n  const onSubmit = async (data) => {\n    try {\n      // setLoadingButton(false)\n      // setVisible(false)\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/customer/` + id, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify(data),\n      })\n      if (_data.status === 200) {\n        setVisible(true)\n      }\n      setServerAlert(false)\n      // setVisible(true)\n    } catch (err) {\n      console.error('Error:', err)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Server Error', color: 'warning' })\n    }\n  }\n  const handleLoadCustomerData = async () => {\n    // const id = params.id\n    setLoader(true)\n\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/customer/` + id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status === 200) {\n        const data = await _data.json()\n        setCustomerData(data.customer)\n        setLoader(false)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server Error', color: 'warning' })\n    }\n  }\n\n  function refreshPage() {\n    window.location.reload()\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  useEffect(() => {\n    handleLoadCustomerData()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n      <CRow>\n        <Modal\n          open={visible}\n          close={setVisible}\n          data={refreshPage}\n          onClick={() => {\n            handleClose()\n          }}\n          titleModal={'Message sent'}\n          descModal={'Email promo sent to the customer'}\n          visible={visible}\n        />\n        <CCol xs={12} sm={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>View Customer Details</strong>\n            </CCardHeader>\n            <CCardBody>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"exampleFormControlInput1\">First Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  defaultValue={customerData.firstName}\n                  readOnly={true}\n                  invalid={errors.firstName}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"exampleFormControlInput1\">Last Name</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  readOnly={true}\n                  defaultValue={customerData.lastName}\n                  invalid={errors.lastName}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"exampleFormControlInput1\">Email</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  readOnly={true}\n                  defaultValue={customerData.email}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"exampleFormControlInput1\">Address</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"address\"\n                  readOnly={true}\n                  name=\"address\"\n                  defaultValue={customerData.address}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"exampleFormControlInput1\">Phone Number</CFormLabel>\n                <CFormInput\n                  type=\"text\"\n                  id=\"phoneNumber\"\n                  readOnly={true}\n                  name=\"phoneNumber\"\n                  defaultValue={customerData.phoneNumber}\n                />\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Send Promotions</strong> <small>{customerData.firstName}</small>\n            </CCardHeader>\n            <CCardBody>\n              <div className=\"col-auto mb-3\">To : {customerData.email}</div>\n              <CForm onSubmit={handleSubmit(onSubmit)}>\n                <CFormFloating>\n                  <CFormTextarea\n                    className=\"mb-3\"\n                    placeholder=\"Leave a comment here\"\n                    id=\"floatingTextarea2\"\n                    name=\"promotion\"\n                    style={{ height: '100px' }}\n                    invalid={errors.promotion ? true : false}\n                    {...register('promotion', {\n                      required: 'Required',\n                    })}\n                  ></CFormTextarea>\n                  {errors.promotion && (\n                    <span style={{ color: 'red' }}>{errors.promotion.message}</span>\n                  )}\n                  <CFormLabel htmlFor=\"floatingTextarea2\">Type message</CFormLabel>\n                </CFormFloating>\n                <CButton type=\"submit\">\n                  <CIcon icon={cilSend} className=\"me-2\" />\n                  Send\n                </CButton>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>{' '}\n      <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              {/* table */}\n              <Orders id={id} />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n"],"sourceRoot":""}