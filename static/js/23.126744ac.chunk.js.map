{"version":3,"sources":["components/alert/Alert.js","components/modal/Modal.js","components/skeleton/Skeleton.js","../node_modules/@coreui/icons/js/free/cil-trash.js","../node_modules/@coreui/icons/js/free/cil-plus.js","../node_modules/@coreui/icons/js/free/cil-loop-circular.js","../node_modules/@coreui/icons/js/free/cil-truck.js","../node_modules/@coreui/icons/js/free/cil-check.js","../node_modules/@coreui/icons/js/free/cil-x.js","views/orders/Orders.js","views/orders/CancelledOrders.js","views/orders/DeliveredOrders.js","views/orders/ProcessingOrders.js","views/orders/ShippedOrders.js","views/orders/pendingOrders.js","views/orders/Layout.js"],"names":["Alert","props","color","data","alertMsg","Modal","backdrop","visible","open","onClose","close","titleModal","descModal","onClick","itemID","React","memo","LoadingBars","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","cilTrash","cilPlus","cilLoopCircular","cilTruck","cilCheck","cilX","Orders","history","useHistory","ordersData","setOrdersData","useSelector","state","ordersInfo","useState","display","setDisplay","pagination","setPagination","activePage","setActivePage","loader","setLoader","alertDetails","setAlertDetails","serverAlert","setServerAlert","setVisible","searchData","setSearchData","endDate","setEndDate","reset","setReset","startDate","setStartDate","deleteItem","setDeleteItem","search","async","splice","length","clearData","_data","fetch","process","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","status","json","i","Math","ceil","orderList","push","err","console","error","useEffect","handleLoadOrders","id","window","location","reload","xs","sm","className","dateFormat","onChange","date","selected","selectsStart","maxDate","Date","calendarStartDay","selectsEnd","minDate","name","placeholder","e","target","value","icon","cilZoom","bordered","hover","scope","map","item","index","orderNumber","receiverName","dateOrder","slice","phoneNumber","shippingAddress","num","subTotalPrice","city","price","toFixed","size","_id","align","active","page","prevArray","undefined","handleShowData","CancelledOrders","orderData","useDispatch","cancelledOrdersInfo","setPegination","setAlertMessage","msg","totalPrice","DeliveredOrders","deliveredOrdersInfo","ProcessingOrders","processingOrdersInfo","ShippedOrders","shippedOrdersInfo","PendingOrders","pendingOrdersInfo","Layout","setState","shippedOrders","setShippedOrders","pendingOrders","setPendingOrders","deliveredOrders","setDelivered","processingOrders","setProcessingOrders","cancelledOrders","setCancelledOrders","allOrders","setAllOrders","dispatch","_all","all","type","lg","style","cursor","cilFastfood","title"],"mappings":"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","file":"static/js/23.126744ac.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CAlert } from '@coreui/react'\n\nconst Alert = (props) => {\n  return (\n    <>\n      <CAlert color={props.data.color}>\n        <strong>{props.data.alertMsg}</strong>\n      </CAlert>\n    </>\n  )\n}\n\nexport default Alert\nAlert.propTypes = {\n  data: PropTypes.object,\n}\n","import React from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Modal = (props) => {\n  return (\n    <>\n      <CModal backdrop=\"static\" visible={props.open} onClose={() => props.close()}>\n        <CModalHeader>\n          <CModalTitle>{props.titleModal}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.descModal}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => props.close()}>\n            Close\n          </CButton>\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              props.data(props.itemID)\n              props.close()\n            }}\n          >\n            Ok\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\nexport default React.memo(Modal)\nModal.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  onClick: PropTypes.func,\n  itemID: PropTypes.string,\n  data: PropTypes.func,\n  titleModal: PropTypes.string,\n  descModal: PropTypes.string,\n}\n","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport ContentLoader from 'react-content-loader'\n// const LoadingBars = () => {\n//   return (\n//     <>\n//       <div>\n//         <SkeletonTheme baseColor=\"#F1EFF1\" highlightColor=\"#858789\">\n//           <h1>\n//             <Skeleton />\n//           </h1>\n//           <br></br>\n//           <Skeleton count={20} />\n//         </SkeletonTheme>\n//       </div>\n//     </>\n//   )\n// }\nconst LoadingBars = (props) => (\n  <ContentLoader\n    width={'100%'}\n    height={550}\n    viewBox=\"0 0 1000 550\"\n    backgroundColor=\"#eaeced\"\n    foregroundColor=\"#ffffff\"\n    {...props}\n  >\n    <rect x=\"51\" y=\"45\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <circle cx=\"879\" cy=\"123\" r=\"11\" />\n    <circle cx=\"914\" cy=\"123\" r=\"11\" />\n    <rect x=\"104\" y=\"115\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"305\" y=\"114\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"661\" y=\"114\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"155\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"880\" cy=\"184\" r=\"11\" />\n    <circle cx=\"915\" cy=\"184\" r=\"11\" />\n    <rect x=\"105\" y=\"176\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"306\" y=\"175\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"662\" y=\"175\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"56\" y=\"216\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"242\" r=\"11\" />\n    <circle cx=\"916\" cy=\"242\" r=\"11\" />\n    <rect x=\"106\" y=\"234\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"233\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"233\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"274\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"303\" r=\"11\" />\n    <circle cx=\"917\" cy=\"303\" r=\"11\" />\n    <rect x=\"107\" y=\"295\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"294\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"294\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"58\" y=\"335\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"363\" r=\"11\" />\n    <circle cx=\"916\" cy=\"363\" r=\"11\" />\n    <rect x=\"106\" y=\"355\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"354\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"354\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"395\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"424\" r=\"11\" />\n    <circle cx=\"917\" cy=\"424\" r=\"11\" />\n    <rect x=\"107\" y=\"416\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"415\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"415\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"453\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"51\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <rect x=\"955\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <circle cx=\"882\" cy=\"484\" r=\"11\" />\n    <circle cx=\"917\" cy=\"484\" r=\"11\" />\n    <rect x=\"107\" y=\"476\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"475\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"475\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"513\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"52\" y=\"80\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <rect x=\"53\" y=\"57\" rx=\"3\" ry=\"3\" width=\"68\" height=\"33\" />\n    <rect x=\"222\" y=\"54\" rx=\"3\" ry=\"3\" width=\"149\" height=\"33\" />\n    <rect x=\"544\" y=\"55\" rx=\"3\" ry=\"3\" width=\"137\" height=\"33\" />\n    <rect x=\"782\" y=\"56\" rx=\"3\" ry=\"3\" width=\"72\" height=\"33\" />\n    <rect x=\"933\" y=\"54\" rx=\"3\" ry=\"3\" width=\"24\" height=\"33\" />\n  </ContentLoader>\n)\n\nexport default LoadingBars\n","export const cilTrash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"]","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]","export const cilLoopCircular = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M415.313,358.7c36.453-36.452,55.906-85.231,54.779-137.353-1.112-51.375-21.964-99.908-58.715-136.66L388.75,107.314A166.816,166.816,0,0,1,438.1,222.039c.937,43.313-15.191,83.81-45.463,114.083l-48.617,49.051.044-89.165-32-.016L311.992,440H456.063V408H366.449Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M47.937,112h89.614L88.687,161.3c-36.453,36.451-55.906,85.231-54.779,137.352a198.676,198.676,0,0,0,58.715,136.66l22.627-22.627A166.818,166.818,0,0,1,65.9,297.962c-.937-43.314,15.191-83.811,45.463-114.083l48.617-49.051-.044,89.165,32,.015L192.008,80H47.937Z' class='ci-primary'/>\"]","export const cilTruck = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M441.885,141.649A32.028,32.028,0,0,0,415.669,128H336V80a32.036,32.036,0,0,0-32-32H48A32.036,32.036,0,0,0,16,80V408H69.082a67.982,67.982,0,0,0,133.836,0H309.082a67.982,67.982,0,0,0,133.836,0H496V226.522a23.882,23.882,0,0,0-4.338-13.763ZM47.98,80H304V256H48ZM136,432a36,36,0,1,1,36-36A36.04,36.04,0,0,1,136,432Zm240,0a36,36,0,1,1,36-36A36.04,36.04,0,0,1,376,432Zm88-56H440.994a68,68,0,0,0-129.988,0H200.994a68,68,0,0,0-129.988,0H48V288H464Zm0-120H336V160h79.669L464,229.044Z' class='ci-primary'/>\"]","export const cilCheck = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M199.066,456l-7.379-7.514-3.94-3.9-86.2-86.2.053-.055L17.936,274.665l97.614-97.613,83.565,83.565L398.388,61.344,496,158.958,296.729,358.229,285.469,369.6ZM146.6,358.183l52.459,52.46.1-.1.054.054,52.311-52.311,11.259-11.368L450.746,158.958,398.388,106.6,199.115,305.871,115.55,222.306,63.191,274.665l83.464,83.463Z' class='ci-primary'/>\"]","export const cilX = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"]","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst Orders = () => {\n  const history = useHistory()\n  const order = useSelector((state) => state.ordersInfo)\n  const [ordersData, setOrdersData] = useState({})\n  var [display, setDisplay] = useState([])\n  const [pagination, setPagination] = useState([])\n  const [activePage, setActivePage] = useState(1)\n  const active = true\n\n  const [loader, setLoader] = useState(true)\n  const [alertDetails, setAlertDetails] = useState({ alertMsg: '', color: 'success' })\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [searchData, setSearchData] = useState([])\n\n  const [endDate, setEndDate] = useState()\n  const [reset, setReset] = useState(false)\n  const [startDate, setStartDate] = useState()\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n\n  //handle load data\n  const handleLoadOrders = async () => {\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/list`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status === 404) {\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'No data found', color: 'warning' })\n      }\n      const data = await _data.json()\n      for (let i = 1; i <= Math.ceil(data.orderList.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < data.orderList.length; i++) {\n        display.push(data.orderList[i])\n      }\n\n      setOrdersData(data.orderList)\n      //dispatch({ type: 'orders', ordersInfo: data.orderList })\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server error', color: 'danger' })\n    }\n  }\n\n  //clear data in usestate\n  const clearData = async () => {\n    setActivePage(1)\n    display.splice(0, display.length)\n    pagination.splice(0, pagination.length)\n  }\n\n  //price format\n  function ccyFormat(num) {\n    return `${num.toFixed(2)}`\n  }\n\n  //search\n  const search = async () => {\n    clearData()\n    setServerAlert(false)\n    try {\n      let _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/search/order`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify({ startDate, endDate, searchData }),\n      })\n\n      if (_data.status === 404) {\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'No data found', color: 'warning' })\n      }\n      if (_data.status === 200) {\n        const data = await _data.json()\n        for (let i = 1; i <= Math.ceil(data.orderList.length / 10); i++) {\n          pagination.push(i)\n        }\n\n        for (let i = 0; i < 10 && i < data.orderList.length; i++) {\n          display.push(data.orderList[i])\n        }\n        setOrdersData(data.orderList)\n      }\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server error', color: 'danger' })\n    }\n  }\n\n  //handle show data in table\n  const handleShowData = (page) => {\n    setActivePage(page + 1)\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (ordersData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, ordersData[i]])\n    }\n    setLoader(false)\n  }\n\n  //delete\n  const handleDeleteData = async (props) => {\n    try {\n      const id = props\n\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/delete/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status === 200) {\n        refreshPage()\n      }\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertDetails('Internal server Error')\n    }\n  }\n\n  //refresh page\n  function refreshPage() {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [reset])\n\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <Modal\n        open={visible}\n        close={setVisible}\n        data={handleDeleteData}\n        itemID={deleteItem}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Delete Order?'}\n        descModal={'It will be gone forever'}\n        visible={visible}\n      />\n      <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>All Orders</strong>\n            </CCardHeader>\n            {ordersData.length > 0 ? (\n              <CCardBody>\n                {' '}\n                <CForm className=\"row g-4\">\n                  <div className=\"col-auto\">From </div>\n                  <div className=\"col-auto\">\n                    <DatePicker\n                      dateFormat=\"yyyy-MM-dd\"\n                      onChange={(date) => setStartDate(date)}\n                      selected={startDate}\n                      selectsStart\n                      startDate={startDate}\n                      endDate={endDate}\n                      maxDate={new Date()}\n                      calendarStartDay={1}\n                    />\n                  </div>\n                  <div className=\"col-auto\">To </div>\n                  <div className=\"col-auto\">\n                    <DatePicker\n                      dateFormat=\"yyyy-MM-dd\"\n                      onChange={(date) => setEndDate(date)}\n                      selected={endDate}\n                      selectsEnd\n                      startDate={startDate}\n                      endDate={endDate}\n                      minDate={startDate}\n                      maxDate={new Date()}\n                      calendarStartDay={1}\n                    />\n                  </div>\n                  <br />\n                  <div className=\"col-auto\">\n                    <CFormInput\n                      id=\"search\"\n                      name=\"search\"\n                      placeholder=\"Search by Name\"\n                      onChange={(e) => {\n                        setSearchData(e.target.value)\n                      }}\n                    />\n                  </div>\n                  <div className=\"col-auto\">\n                    <CButton color=\"primary\" onClick={() => search()}>\n                      <CIcon icon={cilZoom} className=\"me-2\" />\n                      Search\n                    </CButton>\n                  </div>\n                  <CCardBody>\n                    <CCol xs={12}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n                  </CCardBody>\n                </CForm>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item.orderNumber}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>\n                            LKR {ccyFormat(item.subTotalPrice + item.city.price)}\n                          </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"warning\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'pending' ? (\n                              <CBadge color=\"primary\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              {item.status === 'cancelled' || item.status === 'delivered' ? (\n                                <CButton\n                                  color=\"danger\"\n                                  size=\"sm\"\n                                  onClick={() => {\n                                    setVisible(true)\n                                    setDeleteItem(item._id)\n                                  }}\n                                >\n                                  <CIcon icon={cilTrash} className=\"me-2\" />\n                                  Delete\n                                </CButton>\n                              ) : null}\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                {pagination ? (\n                  <CPagination align=\"center\">\n                    {pagination.map((item, index) => {\n                      return (\n                        <CPaginationItem\n                          key={index}\n                          active={activePage === item ? active : null}\n                          onClick={() => handleShowData(index)}\n                        >\n                          {item}\n                        </CPaginationItem>\n                      )\n                    })}\n                  </CPagination>\n                ) : null}\n              </CCardBody>\n            ) : null}\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Orders\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsF,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst CancelledOrders = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const orderData = useSelector((state) => state.cancelledOrdersInfo)\n  var [display, setDisplay] = useState([])\n  const [pagination, setPegination] = useState([])\n  const [loader, setLoader] = useState(true)\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n\n  const [activePage, setActivePage] = useState(1)\n  const active = true\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n  //load data\n  const handleLoadOrders = async () => {\n    for (let i = 1; i <= Math.ceil(orderData.length / 10); i++) {\n      pagination.push(i)\n    }\n\n    for (let i = 0; i < 10 && i < orderData.length; i++) {\n      display.push(orderData[i])\n    }\n\n    setLoader(false)\n  }\n  //select data to relavent table pagination\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (orderData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, orderData[i]])\n    }\n  }\n  //delete order\n  const handleDeleteData = async (props) => {\n    try {\n      const id = props\n\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/delete/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status === 200) {\n        refreshPage()\n      }\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n\n  //refreshing page\n  function refreshPage() {\n    window.location.reload()\n  }\n  //getting data from redux\n  const productsData = useSelector((state) => state.ordersInfo)\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert msg={alertMsg} /> : null}</CCol>\n      <Modal\n        open={visible}\n        close={setVisible}\n        data={handleDeleteData}\n        itemID={deleteItem}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Delete Order?'}\n        descModal={'It will be gone forever'}\n        visible={visible}\n      />\n      <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>All Cancelled Orders</strong>\n            </CCardHeader>\n            {orderData.length > 0 ? (\n              <CCardBody>\n                <p className=\"text-medium-emphasis small\">Here the all Orders in your shop.</p>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item._id}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>Rs.{item.totalPrice} </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"warning\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              <CButton\n                                color=\"danger\"\n                                size=\"sm\"\n                                onClick={() => {\n                                  setVisible(true)\n                                  setDeleteItem(item._id)\n                                }}\n                              >\n                                <CIcon icon={cilTrash} className=\"me-2\" />\n                                Delete\n                              </CButton>\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                <CPagination align=\"center\">\n                  {pagination.map((item, index) => {\n                    return (\n                      <CPaginationItem\n                        key={index}\n                        active={activePage === item ? active : null}\n                        onClick={() => handleShowData(index)}\n                      >\n                        {item}\n                      </CPaginationItem>\n                    )\n                  })}\n                </CPagination>\n              </CCardBody>\n            ) : null}\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default CancelledOrders\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsF,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTruck, cilCheck, cilFastfood, cilTrash, cilThumbUp, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst DeliveredOrders = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [activePage, setActivePage] = useState(1)\n  const orderData = useSelector((state) => state.deliveredOrdersInfo)\n  const [loader, setLoader] = useState(true)\n  var [display, setDisplay] = useState([])\n  const [pagination, setPegination] = useState([])\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const active = true\n\n  const [deleteItem, setDeleteItem] = useState()\n  //load order\n  const handleLoadOrders = async () => {\n    try {\n      for (let i = 1; i <= Math.ceil(orderData.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < orderData.length; i++) {\n        display.push(orderData[i])\n      }\n\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n    setActivePage(page + 1)\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (orderData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, orderData[i]])\n    }\n  }\n  //delete order\n  const handleDeleteData = async (props) => {\n    try {\n      const id = props\n\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/delete/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status === 200) {\n        refreshPage()\n      }\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n  function refreshPage() {\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert msg={alertMsg} /> : null}</CCol>\n      <Modal\n        open={visible}\n        close={setVisible}\n        data={handleDeleteData}\n        itemID={deleteItem}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Delete Order?'}\n        descModal={'It will be gone forever'}\n        visible={visible}\n      />\n      <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>All Delivered Orders</strong>\n            </CCardHeader>\n            {orderData.length > 0 ? (\n              <CCardBody>\n                <p className=\"text-medium-emphasis small\">Here the all Orders in your shop.</p>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item.orderNumber}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>Rs.{item.totalPrice} </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"warning\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              {item.status === 'cancelled' || item.status === 'delivered' ? (\n                                <CButton\n                                  color=\"danger\"\n                                  size=\"sm\"\n                                  onClick={() => {\n                                    setVisible(true)\n                                    setDeleteItem(item._id)\n                                  }}\n                                >\n                                  <CIcon icon={cilTrash} className=\"me-2\" />\n                                  Delete\n                                </CButton>\n                              ) : null}\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                <CPagination align=\"center\">\n                  {pagination.map((item, index) => {\n                    return (\n                      <CPaginationItem\n                        key={index}\n                        active={activePage === item ? active : null}\n                        onClick={() => handleShowData(index)}\n                      >\n                        {item}\n                      </CPaginationItem>\n                    )\n                  })}\n                </CPagination>\n              </CCardBody>\n            ) : null}\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default DeliveredOrders\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsF,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst ProcessingOrders = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const orderData = useSelector((state) => state.processingOrdersInfo)\n  var [display, setDisplay] = useState([])\n  const [pagination, setPagination] = useState([])\n  const [loader, setLoader] = useState(true)\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n\n  const handleLoadOrders = async () => {\n    try {\n      for (let i = 1; i <= Math.ceil(orderData.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < orderData.length; i++) {\n        display.push(orderData[i])\n      }\n\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (orderData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, orderData[i]])\n    }\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert msg={alertMsg} /> : null}</CCol>\n      {/* <Modal\n        open={visible}\n        close={setVisible}\n        data={handleDeleteData}\n        itemID={deleteItem}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Delete Order?'}\n        descModal={'It will be gone forever'}\n        visible={visible}\n      /> */}\n      {orderData.length > 0 ? (\n        <CRow>\n          <CCol xs={12} sm={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>All Processing Orders</strong>\n              </CCardHeader>\n              <CCardBody>\n                <p className=\"text-medium-emphasis small\">Here the all Orders in your shop.</p>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item._id}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>Rs.{item.totalPrice} </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                <CPagination align=\"center\">\n                  {pagination.map((item, index) => {\n                    return (\n                      <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                        {item}\n                      </CPaginationItem>\n                    )\n                  })}\n                </CPagination>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : null}\n    </>\n  )\n}\n\nexport default ProcessingOrders\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CWidgetStatsF,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTruck, cilCheck, cilFastfood, cilTrash, cilThumbUp, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst ShippedOrders = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const orderData = useSelector((state) => state.shippedOrdersInfo)\n  var [display, setDisplay] = useState([])\n  const [pagination, setPegination] = useState([])\n  const [loader, setLoader] = useState(true)\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n\n  const handleLoadOrders = async () => {\n    try {\n      for (let i = 1; i <= Math.ceil(orderData.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < orderData.length; i++) {\n        display.push(orderData[i])\n      }\n\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (orderData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, orderData[i]])\n    }\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert msg={alertMsg} /> : null}</CCol>\n      {orderData.length > 0 ? (\n        <CRow>\n          <CCol xs={12} sm={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>All Shipped Orders</strong>\n              </CCardHeader>\n              <CCardBody>\n                <p className=\"text-medium-emphasis small\">Here the all Orders in your shop.</p>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item.orderNumber}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>Rs.{item.totalPrice} </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"warning\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              {item.status === 'cancelled' || item.status === 'delivered' ? (\n                                <CButton\n                                  color=\"danger\"\n                                  size=\"sm\"\n                                  onClick={() => {\n                                    setVisible(true)\n                                    setDeleteItem(item._id)\n                                  }}\n                                >\n                                  <CIcon icon={cilTrash} className=\"me-2\" />\n                                  Delete\n                                </CButton>\n                              ) : null}\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                <CPagination align=\"center\">\n                  {pagination.map((item, index) => {\n                    return (\n                      <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                        {item}\n                      </CPaginationItem>\n                    )\n                  })}\n                </CPagination>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : null}\n    </>\n  )\n}\n\nexport default ShippedOrders\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash, cilZoom } from '@coreui/icons'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport Alert from 'src/components/alert/Alert'\nimport Modal from 'src/components/modal/Modal'\n\nconst PendingOrders = () => {\n  const history = useHistory()\n  const orderData = useSelector((state) => state.pendingOrdersInfo)\n  var [display, setDisplay] = useState([])\n  const [pagination, setPagination] = useState([])\n  const [loader, setLoader] = useState(true)\n  const [alertMsg, setAlertMessage] = useState('')\n  const [serverAlert, setServerAlert] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const handleClose = () => {\n    setVisible(false)\n  }\n  const [deleteItem, setDeleteItem] = useState()\n\n  const handleLoadOrders = async () => {\n    try {\n      for (let i = 1; i <= Math.ceil(orderData.length / 10); i++) {\n        pagination.push(i)\n      }\n\n      for (let i = 0; i < 10 && i < orderData.length; i++) {\n        display.push(orderData[i])\n      }\n\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n      setAlertMessage('Internal server Error')\n    }\n  }\n\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (orderData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, orderData[i]])\n    }\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CCol xs={6}>{serverAlert ? <Alert msg={alertMsg} /> : null}</CCol>\n      {/* <Modal\n        open={visible}\n        close={setVisible}\n        data={handleDeleteData}\n        itemID={deleteItem}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Delete Order?'}\n        descModal={'It will be gone forever'}\n        visible={visible}\n      /> */}\n      {orderData.length > 0 ? (\n        <CRow>\n          <CCol xs={12} sm={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>All Pending Orders</strong>\n              </CCardHeader>\n              <CCardBody>\n                <p className=\"text-medium-emphasis small\">Here the all Orders in your shop.</p>\n                <CTable bordered hover>\n                  <CTableHead color=\"dark\">\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Receiver Name</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Phone Number</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">shipping Address</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {display.map((item, index) => {\n                      return (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{item._id}</CTableDataCell>\n                          <CTableDataCell>{item.receiverName}</CTableDataCell>\n                          <CTableDataCell>{item.dateOrder.slice(0, 10)}</CTableDataCell>\n                          <CTableDataCell>{item.phoneNumber}</CTableDataCell>\n                          <CTableDataCell>{item.shippingAddress}</CTableDataCell>\n                          <CTableDataCell>Rs.{item.totalPrice} </CTableDataCell>\n                          <CTableDataCell>\n                            {item.status == 'delivered' ? (\n                              <CBadge color=\"success\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'processing' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'cancelled' || item.status == 'suspended' ? (\n                              <CBadge color=\"danger\">{item.status}</CBadge>\n                            ) : null}\n                            {item.status == 'shipped' ? (\n                              <CBadge color=\"info\">{item.status}</CBadge>\n                            ) : null}\n                          </CTableDataCell>\n                          <CTableDataCell className=\"d-flex justify-content-evenly\">\n                            <span>\n                              <CButton\n                                color=\"warning\"\n                                size=\"sm\"\n                                onClick={() => history.push(`/order/${item._id}`)}\n                              >\n                                <CIcon icon={cilZoom} className=\"me-2\" />\n                                View\n                              </CButton>\n                            </span>\n                          </CTableDataCell>\n                        </CTableRow>\n                      )\n                    })}\n                  </CTableBody>\n                </CTable>\n                <CPagination align=\"center\">\n                  {pagination.map((item, index) => {\n                    return (\n                      <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                        {item}\n                      </CPaginationItem>\n                    )\n                  })}\n                </CPagination>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : null}\n    </>\n  )\n}\n\nexport default PendingOrders\n","import { cilCheck, cilFastfood, cilTruck, cilX, cilLoopCircular, cilPlus } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CCol, CRow, CWidgetStatsF } from '@coreui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Orders from './Orders'\nimport CancelledOrders from './CancelledOrders'\nimport DeliveredOrders from './DeliveredOrders'\nimport ProcessingOrders from './ProcessingOrders'\nimport ShippedOrders from './ShippedOrders'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport PendingOrders from './pendingOrders'\n\n//layout of order page\nconst Layout = () => {\n  const [state, setState] = useState(0)\n  const [shippedOrders, setShippedOrders] = useState([])\n  const [pendingOrders, setPendingOrders] = useState([])\n  const [deliveredOrders, setDelivered] = useState([])\n  const [processingOrders, setProcessingOrders] = useState([])\n  const [cancelledOrders, setCancelledOrders] = useState([])\n  const [allOrders, setAllOrders] = useState([])\n  //redux\n  const dispatch = useDispatch()\n  const [loader, setLoader] = useState(true)\n  const handleLoadOrders = async () => {\n    try {\n      const _all = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/list`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      const all = await _all.json()\n      setAllOrders(all.orderList)\n      for (let i = 0; i < all.orderList.length; i++) {\n        if (all.orderList[i].status === 'pending') {\n          pendingOrders.push(all.orderList[i])\n        } else if (all.orderList[i].status === 'processing') {\n          processingOrders.push(all.orderList[i])\n        } else if (all.orderList[i].status === 'shipped') {\n          shippedOrders.push(all.orderList[i])\n        } else if (all.orderList[i].status === 'delivered') {\n          deliveredOrders.push(all.orderList[i])\n        } else if (all.orderList[i].status === 'cancelled') {\n          cancelledOrders.push(all.orderList[i])\n        }\n      }\n      //store data in redux store\n      dispatch({ type: 'orders', ordersInfo: allOrders })\n      dispatch({ type: 'processingOrders', pendingOrdersInfo: pendingOrders })\n      dispatch({ type: 'pendingOrders', processingOrdersInfo: processingOrders })\n      dispatch({ type: 'shippedOrders', shippedOrdersInfo: shippedOrders })\n      dispatch({ type: 'deliveredOrders', deliveredOrdersInfo: deliveredOrders })\n      dispatch({ type: 'cancelledOrders', cancelledOrdersInfo: cancelledOrders })\n\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  useEffect(() => {\n    handleLoadOrders()\n  }, [])\n  if (loader) {\n    return <LoadingBars />\n  }\n  return (\n    <>\n      <CRow>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(0)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilFastfood} size=\"xl\" />}\n            title=\"All Orders\"\n            value={allOrders.length}\n            color=\"primary\"\n          />\n        </CCol>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(1)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilPlus} size=\"xl\" />}\n            title=\"Pending Orders\"\n            value={pendingOrders.length}\n            color=\"primary\"\n          />\n        </CCol>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(2)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilLoopCircular} size=\"xl\" />}\n            title=\"Processing\"\n            value={processingOrders.length}\n            color=\"info\"\n          />\n        </CCol>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(3)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilTruck} size=\"xl\" />}\n            title=\"Shipped\"\n            value={shippedOrders.length}\n            color=\"warning\"\n          />\n        </CCol>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(4)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilCheck} size=\"xl\" />}\n            title=\"Delivered\"\n            value={deliveredOrders.length}\n            color=\"success\"\n          />\n        </CCol>\n        <CCol xs={12} sm={6} lg={3}>\n          <CWidgetStatsF\n            onClick={() => setState(5)}\n            style={{ cursor: 'pointer' }}\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilX} size=\"xl\" />}\n            title=\"Cancelled\"\n            value={cancelledOrders.length}\n            color=\"danger\"\n          />\n        </CCol>\n      </CRow>\n\n      {state == 0 ? <Orders /> : null}\n      {state == 1 ? <PendingOrders /> : null}\n      {state == 2 ? <ProcessingOrders /> : null}\n      {state == 3 ? <ShippedOrders /> : null}\n      {state == 4 ? <DeliveredOrders /> : null}\n      {state == 5 ? <CancelledOrders /> : null}\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}