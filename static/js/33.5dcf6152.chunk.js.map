{"version":3,"sources":["components/alert/Alert.js","../node_modules/@coreui/icons/js/free/cil-pen.js","views/reports/CustomerReport.js"],"names":["Alert","props","color","data","alertMsg","cilPen","CustomerReports","history","useHistory","loadingButton","setLoadingButton","useState","responseData","setResponseData","display","setDisplay","serverAlert","setServerAlert","alertDetails","setAlertDetails","pagination","setPagination","state","setState","startDate","Date","endDate","addDays","key","clearData","splice","length","xs","sm","className","onChange","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","maxDate","size","onClick","async","_data","fetch","process","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","status","json","i","Math","ceil","push","err","console","log","loadData","component","variant","undefined","bordered","hover","scope","map","index","firstName","lastName","count","num","price","toFixed","id","icon","align","page","prevArray","handleShowData"],"mappings":"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","file":"static/js/33.5dcf6152.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CAlert } from '@coreui/react'\n\nconst Alert = (props) => {\n  return (\n    <>\n      <CAlert color={props.data.color}>\n        <strong>{props.data.alertMsg}</strong>\n      </CAlert>\n    </>\n  )\n}\n\nexport default Alert\nAlert.propTypes = {\n  data: PropTypes.object,\n}\n","export const cilPen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M345.994,42.019,179.531,208.481A646.3,646.3,0,0,0,25.325,456.521a24.845,24.845,0,0,0,6,25.708l.087.087a24.84,24.84,0,0,0,17.611,7.342,25.172,25.172,0,0,0,8.1-1.344,646.283,646.283,0,0,0,248.04-154.207L471.62,167.646A88.831,88.831,0,0,0,345.994,42.019ZM282.531,311.48A614.445,614.445,0,0,1,60.419,453.221,614.435,614.435,0,0,1,202.158,231.108l99.162-99.161,80.372,80.372ZM448.993,145.019l-44.674,44.673L323.947,109.32l44.674-44.674a56.832,56.832,0,1,1,80.372,80.373Z' class='ci-primary'/>\"]","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CPagination,\n  CPaginationItem,\n  CRow,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport 'react-date-range/dist/styles.css' // main css file\nimport 'react-date-range/dist/theme/default.css' // theme css file\nimport { addDays } from 'date-fns'\nimport { DateRangePicker } from 'react-date-range'\nimport { cilPen, cilTrash } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport Alert from 'src/components/alert/Alert'\n\nconst CustomerReports = () => {\n  const history = useHistory()\n  const [loadingButton, setLoadingButton] = useState(false)\n  const [responseData, setResponseData] = useState({})\n  var [display, setDisplay] = useState([])\n  const [serverAlert, setServerAlert] = useState(false)\n  const [alertDetails, setAlertDetails] = useState({ alertMsg: '', color: 'success' })\n  const [pagination, setPagination] = useState([])\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: addDays(new Date(), 0),\n      key: 'selection',\n    },\n  ])\n  function ccyFormat(num) {\n    return `${num.toFixed(2)}`\n  }\n  const loadData = async () => {\n    clearData()\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}api/reports/customer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify({ state }),\n      })\n      setLoadingButton(true)\n      if (_data.status === 200) {\n        setServerAlert(false)\n        const data = await _data.json()\n\n        for (let i = 1; i <= Math.ceil(data.length / 10); i++) {\n          pagination.push(i)\n        }\n\n        for (let i = 0; i < 10 && i < data.length; i++) {\n          display.push(data[i])\n        }\n        setResponseData(data)\n        setLoadingButton(false)\n      }\n      if (_data.status === 404) {\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'No data found', color: 'warning' })\n        setLoadingButton(false)\n      }\n      if (_data.status === 401) {\n        setServerAlert(true)\n        setLoadingButton(false)\n        setAlertDetails({ alertMsg: 'Unauthorized access', color: 'warning' })\n      }\n    } catch (err) {\n      setLoadingButton(false)\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: '', color: 'warning' })\n      console.log(err, 'error')\n    }\n  }\n\n  //clear all prev data\n  const clearData = () => {\n    display.splice(0, display.length)\n    pagination.splice(0, pagination.length)\n  }\n  const handleShowData = (page) => {\n    setDisplay((prevArray) => [])\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      if (responseData[i] === undefined) {\n        break\n      }\n      setDisplay((prevArray) => [...prevArray, responseData[i]])\n    }\n  }\n  return (\n    <div>\n      <CCol xs={6}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n\n      <CRow>\n        <CCol xs={12} sm={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Customer Loyalty</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm className=\"row g-4\">\n                <div className=\"col-auto\">\n                  <DateRangePicker\n                    onChange={(item) => setState([item.selection])}\n                    showSelectionPreview={true}\n                    moveRangeOnFirstSelection={false}\n                    months={1}\n                    ranges={state}\n                    direction=\"horizontal\"\n                    maxDate={new Date()}\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <CButton\n                    color=\"primary\"\n                    size=\"sm\"\n                    className=\"px-4\"\n                    onClick={() => {\n                      loadData()\n                    }}\n                  >\n                    {loadingButton ? (\n                      <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                    ) : undefined}\n                    {loadingButton ? 'Loading' : 'Generate'}\n                  </CButton>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      {display.length > 0 ? (\n        <>\n          <CRow>\n            <CCol xs={12} sm={6}>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <strong>Customer Loyalty</strong>\n                </CCardHeader>\n\n                <CCardBody>\n                  <p className=\"text-medium-emphasis small\">\n                    Here the all Customer Loyalty Reports of your shop.\n                  </p>\n                  <CTable bordered hover>\n                    <CTableHead color=\"dark\">\n                      <CTableRow>\n                        <CTableHeaderCell scope=\"col\">Customer</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Ordered Count</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {display.map((item, index) => {\n                        return (\n                          <CTableRow key={index}>\n                            <CTableDataCell>\n                              {item[0].firstName + ' ' + item[0].lastName}\n                            </CTableDataCell>\n                            <CTableDataCell>{item[0].count}</CTableDataCell>\n                            <CTableDataCell>LKR {ccyFormat(item[0].price)}</CTableDataCell>\n                            <CTableDataCell className=\"d-flex justify-content-evenly\">\n                              <span>\n                                <CButton\n                                  color=\"warning\"\n                                  size=\"sm\"\n                                  onClick={() => history.push(`/customers/${item[0].id}`)}\n                                >\n                                  <CIcon icon={cilPen} className=\"me-2\" />\n                                  View\n                                </CButton>\n                              </span>\n                            </CTableDataCell>\n                          </CTableRow>\n                        )\n                      })}\n                    </CTableBody>\n                  </CTable>\n                  <CPagination align=\"center\">\n                    {pagination.map((item, index) => {\n                      return (\n                        <CPaginationItem key={index} onClick={() => handleShowData(index)}>\n                          {item}\n                        </CPaginationItem>\n                      )\n                    })}\n                  </CPagination>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default CustomerReports\n"],"sourceRoot":""}