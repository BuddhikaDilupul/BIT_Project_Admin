{"version":3,"sources":["components/alert/Alert.js","components/modal/Modal.js","components/skeleton/Skeleton.js","components/downloadPage/DownloadPage.js","views/orders/Order.js"],"names":["Alert","props","color","data","alertMsg","Modal","backdrop","visible","open","onClose","close","titleModal","descModal","onClick","itemID","React","memo","LoadingBars","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","DownloadPage","rootElementID","downloadFileName","input","document","getElementById","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","icon","cilCloudDownload","className","ccyFormat","num","toFixed","Order","orderData","setOrderData","useState","response","setResponse","loader","setLoader","serverAlert","setServerAlert","loadingButton","setLoadingButton","status","setStatus","alertDetails","setAlertDetails","setVisible","params","useParams","price","useEffect","async","id","_data","fetch","process","method","headers","Authorization","localStorage","getItem","Error","json","order","err","console","error","handleLoadOrder","_id","body","JSON","stringify","xs","sm","htmlFor","orderedUser","firstName","email","phoneNumber","dateOrder","slice","subTotalPrice","city","size","component","variant","cilXCircle","cilChevronCircleRightAlt","cilPaperPlane","cilCheckCircle","undefined","receiverName","shippingAddress","orderNumber","bordered","scope","orderItem","map","item","index","quantity","product","productName","colSpan"],"mappings":"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","file":"static/js/27.2a68e34e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CAlert } from '@coreui/react'\n\nconst Alert = (props) => {\n  return (\n    <>\n      <CAlert color={props.data.color}>\n        <strong>{props.data.alertMsg}</strong>\n      </CAlert>\n    </>\n  )\n}\n\nexport default Alert\nAlert.propTypes = {\n  data: PropTypes.object,\n}\n","import React from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport PropTypes from 'prop-types'\nconst Modal = (props) => {\n  return (\n    <>\n      <CModal backdrop=\"static\" visible={props.open} onClose={() => props.close()}>\n        <CModalHeader>\n          <CModalTitle>{props.titleModal}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{props.descModal}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => props.close()}>\n            Close\n          </CButton>\n          <CButton\n            color=\"primary\"\n            onClick={() => {\n              props.data(props.itemID)\n              props.close()\n            }}\n          >\n            Ok\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\nexport default React.memo(Modal)\nModal.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  onClick: PropTypes.func,\n  itemID: PropTypes.string,\n  data: PropTypes.func,\n  titleModal: PropTypes.string,\n  descModal: PropTypes.string,\n}\n","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport ContentLoader from 'react-content-loader'\n// const LoadingBars = () => {\n//   return (\n//     <>\n//       <div>\n//         <SkeletonTheme baseColor=\"#F1EFF1\" highlightColor=\"#858789\">\n//           <h1>\n//             <Skeleton />\n//           </h1>\n//           <br></br>\n//           <Skeleton count={20} />\n//         </SkeletonTheme>\n//       </div>\n//     </>\n//   )\n// }\nconst LoadingBars = (props) => (\n  <ContentLoader\n    width={'100%'}\n    height={550}\n    viewBox=\"0 0 1000 550\"\n    backgroundColor=\"#eaeced\"\n    foregroundColor=\"#ffffff\"\n    {...props}\n  >\n    <rect x=\"51\" y=\"45\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <circle cx=\"879\" cy=\"123\" r=\"11\" />\n    <circle cx=\"914\" cy=\"123\" r=\"11\" />\n    <rect x=\"104\" y=\"115\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"305\" y=\"114\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"661\" y=\"114\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"155\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"880\" cy=\"184\" r=\"11\" />\n    <circle cx=\"915\" cy=\"184\" r=\"11\" />\n    <rect x=\"105\" y=\"176\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"306\" y=\"175\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"662\" y=\"175\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"56\" y=\"216\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"242\" r=\"11\" />\n    <circle cx=\"916\" cy=\"242\" r=\"11\" />\n    <rect x=\"106\" y=\"234\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"233\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"233\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"274\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"303\" r=\"11\" />\n    <circle cx=\"917\" cy=\"303\" r=\"11\" />\n    <rect x=\"107\" y=\"295\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"294\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"294\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"58\" y=\"335\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"881\" cy=\"363\" r=\"11\" />\n    <circle cx=\"916\" cy=\"363\" r=\"11\" />\n    <rect x=\"106\" y=\"355\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"307\" y=\"354\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"663\" y=\"354\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"57\" y=\"395\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <circle cx=\"882\" cy=\"424\" r=\"11\" />\n    <circle cx=\"917\" cy=\"424\" r=\"11\" />\n    <rect x=\"107\" y=\"416\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"415\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"415\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"453\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"51\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <rect x=\"955\" y=\"49\" rx=\"3\" ry=\"3\" width=\"2\" height=\"465\" />\n    <circle cx=\"882\" cy=\"484\" r=\"11\" />\n    <circle cx=\"917\" cy=\"484\" r=\"11\" />\n    <rect x=\"107\" y=\"476\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"308\" y=\"475\" rx=\"3\" ry=\"3\" width=\"299\" height=\"15\" />\n    <rect x=\"664\" y=\"475\" rx=\"3\" ry=\"3\" width=\"141\" height=\"15\" />\n    <rect x=\"55\" y=\"513\" rx=\"3\" ry=\"3\" width=\"897\" height=\"2\" />\n    <rect x=\"52\" y=\"80\" rx=\"3\" ry=\"3\" width=\"906\" height=\"17\" />\n    <rect x=\"53\" y=\"57\" rx=\"3\" ry=\"3\" width=\"68\" height=\"33\" />\n    <rect x=\"222\" y=\"54\" rx=\"3\" ry=\"3\" width=\"149\" height=\"33\" />\n    <rect x=\"544\" y=\"55\" rx=\"3\" ry=\"3\" width=\"137\" height=\"33\" />\n    <rect x=\"782\" y=\"56\" rx=\"3\" ry=\"3\" width=\"72\" height=\"33\" />\n    <rect x=\"933\" y=\"54\" rx=\"3\" ry=\"3\" width=\"24\" height=\"33\" />\n  </ContentLoader>\n)\n\nexport default LoadingBars\n","import { cilCloudDownload } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CButton } from '@coreui/react'\nimport html2canvas from 'html2canvas'\nimport jsPDF from 'jspdf'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function DownloadPage({ rootElementID, downloadFileName }) {\n  const downloadFileDocument = () => {\n    const input = document.getElementById(rootElementID)\n    html2canvas(input).then(function (canvas) {\n      const imgData = canvas.toDataURL('image/png')\n      const pdf = jsPDF('p', 'pt', 'a4')\n      pdf.addImage(imgData, 'JPEG', 35, 35)\n      pdf.save(downloadFileName)\n    })\n  }\n  return (\n    <div>\n      <CButton onClick={downloadFileDocument}>\n        <CIcon icon={cilCloudDownload} className=\"me-2\" />\n        Download\n      </CButton>\n    </div>\n  )\n}\nDownloadPage.propTypes = {\n  rootElementID: PropTypes.string,\n  downloadFileName: PropTypes.string,\n}\n","import React, { useState, useEffect } from 'react'\nimport LoadingBars from 'src/components/skeleton/Skeleton'\nimport { useParams } from 'react-router-dom'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CFormLabel,\n  CTableHead,\n  CTable,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CFormSelect,\n  CButton,\n  CSpinner,\n  CBadge,\n} from '@coreui/react'\nimport Alert from 'src/components/alert/Alert'\nimport DownloadPage from 'src/components/downloadPage/DownloadPage'\nimport Modal from '../../components/modal/Modal'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilCheckCircle,\n  cilChevronCircleRightAlt,\n  cilPaperPlane,\n  cilX,\n  cilXCircle,\n} from '@coreui/icons'\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`\n}\n\nconst Order = () => {\n  const [orderData, setOrderData] = useState()\n  const [response, setResponse] = useState(200)\n  const [loader, setLoader] = useState(true)\n  const [serverAlert, setServerAlert] = useState(false)\n  const [loadingButton, setLoadingButton] = useState(false)\n  const [status, setStatus] = useState('processing')\n  const [alertDetails, setAlertDetails] = useState({ alertMsg: '', color: 'success' })\n  const [visible, setVisible] = useState(false)\n  const params = useParams()\n  let price = 0\n\n  //loading data\n  const handleLoadOrder = async () => {\n    const id = params.id\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/view/` + id, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n      })\n\n      if (_data.status !== 200) {\n        throw new Error()\n      }\n\n      const data = await _data.json()\n      setOrderData(data.order)\n      setLoader(false)\n    } catch (err) {\n      console.error(err)\n      setServerAlert(true)\n    }\n  }\n\n  //updating orders statuses=>shipped ==> delivered\n  const handleStatus = async (props) => {\n    setLoader(true)\n    let status = props\n    const id = orderData._id\n    try {\n      const _data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/order/` + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('authToken'),\n        },\n        body: JSON.stringify({ status }),\n      })\n\n      if (_data.status === 200) {\n        const data = await _data.json()\n        setResponse(data)\n        setLoadingButton(false)\n        setServerAlert(true)\n        setAlertDetails({ alertMsg: 'Updated successfully!', color: 'success' })\n      }\n      setLoader(false)\n    } catch (err) {\n      setServerAlert(true)\n      setAlertDetails({ alertMsg: 'Internal server Error', color: 'warning' })\n      setLoadingButton(false)\n      console.error(err)\n    }\n  }\n  const handleClose = () => {\n    setVisible(false)\n  }\n  useEffect(() => {\n    handleLoadOrder()\n  }, [response])\n  //loader\n  if (loader) {\n    return <LoadingBars />\n  }\n\n  return (\n    <div>\n      <Modal\n        open={visible}\n        close={setVisible}\n        data={handleStatus}\n        itemID={status}\n        onClick={() => {\n          handleClose()\n        }}\n        titleModal={'Change status of Order?'}\n        descModal={'It will update permanently and will sent an email to the client'}\n        visible={visible}\n      />\n      <CRow>\n        <CCol xs={5} sm={7}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Billing Details</strong>\n            </CCardHeader>\n\n            <CCardBody>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Ordered By\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                    {orderData.orderedUser.firstName}\n                  </CFormLabel>\n                </div>\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Email Address\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                    {orderData.orderedUser.email}\n                  </CFormLabel>\n                </div>\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Telephone\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                    {orderData.orderedUser.phoneNumber}\n                  </CFormLabel>\n                </div>\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Date\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                    {orderData.dateOrder.slice(0, 10)}\n                  </CFormLabel>\n                </div>\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Status\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                    {orderData.status === 'pending' ? (\n                      <CBadge color=\"primary\">{orderData.status}</CBadge>\n                    ) : null}\n                    {orderData.status === 'processing' ? (\n                      <CBadge color=\"info\">{orderData.status}</CBadge>\n                    ) : null}\n                    {orderData.status === 'shipped' ? (\n                      <CBadge color=\"warning\">{orderData.status}</CBadge>\n                    ) : null}\n                    {orderData.status === 'delivered' ? (\n                      <CBadge color=\"success\">{orderData.status}</CBadge>\n                    ) : null}\n                    {orderData.status === 'cancelled' ? (\n                      <CBadge color=\"danger\">{orderData.status}</CBadge>\n                    ) : null}\n                  </CFormLabel>\n                </div>\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Total\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                    LKR {ccyFormat(orderData.subTotalPrice + orderData.city.price)}\n                  </CFormLabel>\n                </div>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        {orderData.status !== 'cancelled' && orderData.status !== 'delivered' ? (\n          <CCol xs={4}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>Update status</strong>\n              </CCardHeader>\n\n              <CCardBody>\n                <CCol xs={12}>{serverAlert ? <Alert data={alertDetails} /> : null}</CCol>\n                {/* <CFormSelect\n                  onChange={(e) => {\n                    setStatus(e.target.value)\n                  }}\n                  aria-label=\"Default select example\"\n                >\n                  <option value=\"processing\">processing</option>\n                  <option value=\"shipped\">shipped</option>\n                  <option value=\"delivered\">delivered</option>\n                  <option value=\"cancelled\">cancelled</option>\n                </CFormSelect> */}\n                <span>\n                  <CButton\n                    color=\"danger\"\n                    size=\"sm\"\n                    className=\"px-4\"\n                    onClick={() => {\n                      setVisible(true)\n                      setStatus('cancelled')\n                    }}\n                  >\n                    {loadingButton ? (\n                      <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                    ) : (\n                      <CIcon icon={cilXCircle} className=\"me-2\" />\n                    )}\n                    {loadingButton ? 'Loading' : 'Cancel'}\n                  </CButton>\n                </span>{' '}\n                {orderData.status === 'pending' ? (\n                  <span>\n                    <CButton\n                      color=\"info\"\n                      size=\"sm\"\n                      className=\"px-4\"\n                      onClick={() => {\n                        setVisible(true)\n                        setStatus('processing')\n                      }}\n                    >\n                      {loadingButton ? (\n                        <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                      ) : (\n                        <CIcon icon={cilChevronCircleRightAlt} className=\"me-2\" />\n                      )}\n                      {loadingButton ? 'Loading' : 'Processing'}\n                    </CButton>\n                  </span>\n                ) : null}\n                {orderData.status === 'processing' ? (\n                  <span>\n                    <CButton\n                      color=\"warning\"\n                      size=\"sm\"\n                      className=\"px-4\"\n                      onClick={() => {\n                        setVisible(true)\n                        setStatus('shipped')\n                      }}\n                    >\n                      {loadingButton ? (\n                        <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                      ) : (\n                        <CIcon icon={cilPaperPlane} className=\"me-2\" />\n                      )}\n                      {loadingButton ? 'Loading' : 'Shipped'}\n                    </CButton>\n                  </span>\n                ) : null}\n                {orderData.status === 'shipped' ? (\n                  <span>\n                    <CButton\n                      color=\"success\"\n                      size=\"sm\"\n                      className=\"px-4\"\n                      onClick={() => {\n                        setVisible(true)\n                        setStatus('delivered')\n                      }}\n                    >\n                      {loadingButton ? (\n                        <CSpinner component=\"span\" size=\"sm\" variant=\"grow\" aria-hidden=\"true\" />\n                      ) : (\n                        <CIcon icon={cilCheckCircle} className=\"me-2\" />\n                      )}\n                      {loadingButton ? 'Loading' : 'Delivered'}\n                    </CButton>\n                  </span>\n                ) : null}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        ) : undefined}\n      </CRow>\n      <div id=\"pageToDownload\">\n        <CRow>\n          <CCol xs={6} sm={7}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>Shipping Details</strong>\n              </CCardHeader>\n\n              <CCardBody>\n                <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                    Receiver Name\n                  </CFormLabel>\n                  <div className=\"col-sm-10\">\n                    <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                      {orderData.receiverName}\n                    </CFormLabel>\n                  </div>\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                    Telephone\n                  </CFormLabel>\n                  <div className=\"col-sm-10\">\n                    <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                      {orderData.phoneNumber}\n                    </CFormLabel>\n                  </div>\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                    Address\n                  </CFormLabel>\n                  <div className=\"col-sm-10\">\n                    <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-6 col-form-label\">\n                      {orderData.shippingAddress}\n                    </CFormLabel>\n                  </div>\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                    City\n                  </CFormLabel>\n                  <div className=\"col-sm-10\">\n                    <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                      {orderData.city.city}\n                    </CFormLabel>\n                  </div>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol xs={8} sm={7}>\n            <CCard className=\"mb-4\">\n              <CCardHeader>\n                <strong>Order Details</strong>\n              </CCardHeader>\n              <CCardBody>\n                <CCol xs={12}>\n                  <CCard className=\"mb-4\">\n                    <CCardHeader>\n                      <strong>Order Details Table</strong>{' '}\n                      <small>Order ID : {orderData.orderNumber}</small>\n                    </CCardHeader>\n\n                    <CTable bordered>\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Product Name</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Quantity</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Product Total</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n                        {orderData.orderItem.map((item, index) => {\n                          price = item.quantity * item.product.price\n                          return (\n                            <CTableRow key={index}>\n                              <CTableDataCell>{index + 1}</CTableDataCell>\n                              <CTableDataCell>{item.product.productName}</CTableDataCell>\n                              <CTableDataCell>{item.quantity}</CTableDataCell>\n                              <CTableDataCell>LKR {ccyFormat(price)}</CTableDataCell>\n                            </CTableRow>\n                          )\n                        })}\n                        <CTableRow>\n                          <CTableDataCell></CTableDataCell>\n                          <CTableHeaderCell colSpan=\"2\">Sub Total</CTableHeaderCell>\n                          <CTableDataCell>LKR {ccyFormat(orderData.subTotalPrice)}</CTableDataCell>\n                        </CTableRow>\n                        <CTableRow>\n                          <CTableDataCell></CTableDataCell>\n                          <CTableHeaderCell colSpan=\"2\">Delivery Charges</CTableHeaderCell>\n                          <CTableDataCell>LKR {ccyFormat(orderData.city.price)}</CTableDataCell>\n                        </CTableRow>\n                        <CTableRow>\n                          <CTableDataCell></CTableDataCell>\n                          <CTableHeaderCell colSpan=\"2\">Total Price</CTableHeaderCell>\n                          <CTableDataCell>\n                            LKR {ccyFormat(orderData.subTotalPrice + orderData.city.price)}\n                          </CTableDataCell>\n                        </CTableRow>\n                      </CTableBody>\n                    </CTable>\n                  </CCard>\n                </CCol>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </div>\n      <DownloadPage rootElementID=\"pageToDownload\" downloadFileName={orderData._id} />\n    </div>\n  )\n}\n\nexport default Order\n"],"sourceRoot":""}